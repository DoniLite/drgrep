var searchIndex = new Map(JSON.parse('[["drgrep",{"t":"EEFJFJCNNNNCOOEENNNCONNEONOEQEQEQCOEHOHOHHHHOOCNNNNNNCOCFONNNNNNNNNNNNCCTTTTTTTTTTTTFTTTTTTTNNNNNNNIHHHPGFPPPNNNNNNNNNNNONONNNNNNNNNNNNNNONNNNNNNNNOOCFPGPFNNNNNNNNNOHNHNNNNNNNNNNNNNHNNOOHNHNHNOONNNNNNNNNNNFNNHNNNNONNNFNNHONNNNNONNNH","n":["ArgParser","Color","Config","DEFAULT_MESSAGE","SearchResult","VERSION","args","borrow","","borrow_mut","","color","file_path","files","find","find_all","fmt","from","","glob","idx","into","","is_match","line","new","path_is_dir","print_colored","","print_partial_colored","","print_styled","","regex","","replace_all","run","search_content","search_insensitive_case","search_key","search_sensitive_case","search_with_regex","search_word_insensitive_case","search_word_sensitive_case","sensitive","source","temp_dir","try_from","","try_into","","type_id","","utilities","word","parser","ArgParser","args","borrow","borrow_mut","default","fmt","from","get","has","into","new","try_from","try_into","type_id","config","printer","BLACK","BLUE","BOLD","BRIGHT_BLACK","BRIGHT_BLUE","BRIGHT_CYAN","BRIGHT_GREEN","BRIGHT_MAGENTA","BRIGHT_RED","BRIGHT_WHITE","BRIGHT_YELLOW","CYAN","Color","GREEN","MAGENTA","RED","RESET","UNDERLINE","WHITE","YELLOW","borrow","borrow_mut","from","into","try_from","try_into","type_id","TextParts","print_colored","print_partial_colored","print_styled","CharacterClass","Component","GlobPattern","Literal","MultiWildcard","SingleWildcard","as_str","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","components","expand_alternatives","expanded_patterns","find_files","find_files_recursive","fmt","","from","","into","","matches","matches_components","matches_from_position","new","parse","parse_character_class","pattern","split_respecting_braces","to_owned","","try_from","","try_into","","type_id","","chars","negated","pattern","Match","Other","PatternError","RegexError","RegexPattern","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","end","find","","find_all","","fmt","","","","from","","","","get_pattern","into","","","is_match","","new","pattern","regex","replace_all","","replace_all_with","","split","","start","text","to_owned","to_string","try_from","","","try_into","","","type_id","","","TempDir","borrow","borrow_mut","create_temp_dir","drop","from","into","path","","try_from","try_into","type_id","GitIgnoreFiles","borrow","borrow_mut","can_read_to_utf8","entries","fmt","from","into","is_ignored","load","pattern","try_from","try_into","type_id","visit_dirs"],"q":[[0,"drgrep"],[55,"drgrep::args"],[56,"drgrep::args::parser"],[70,"drgrep::color"],[72,"drgrep::color::config"],[99,"drgrep::color::printer"],[103,"drgrep::glob"],[147,"drgrep::glob::Component"],[149,"drgrep::regex"],[150,"drgrep::regex::pattern"],[205,"drgrep::temp_dir"],[217,"drgrep::utilities"],[232,"core::option"],[233,"core::fmt"],[234,"alloc::vec"],[235,"core::result"],[236,"core::error"],[237,"alloc::boxed"],[238,"core::any"],[239,"std::collections::hash::map"],[240,"alloc::string"],[241,"std::path"],[242,"std::io::error"],[243,"core::convert"],[244,"std::collections::hash::set"],[245,"regex::error"],[246,"regex::regex::string"],[247,"core::ops::function"]],"i":"```````nf10`00``010`110`100```````0``0`0````01`101010`1``Ad000000000000``Ef00000000000`00000000000000````Bn``000Bl0101010101000000101010000000001010101D`0``Df`0`0BbDd2100000`1`1221022101210`1111`1`1`10002210210210`Eb0`00000000`Ed0`0000000000`","f":"```{{}b}`0`{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0`{fh}0``{{{b{f}}{b{dj}}}l}{cc{}}0`{nA`}{{}c{}}0`{nAb}{{{b{Ad}}}{{Ah{f{b{Af}}}}}}{fAj}```````7`{f{{Ah{Al{B`{An}}}}}}8{{{b{Af}}{b{Af}}}{{Ab{{b{Af}}}}}}90{{{b{Bb}}{b{Af}}{b{Af}}}{{Ab{n}}}}{{{b{Af}}{b{Af}}{b{Af}}}{{Ab{n}}}}04{nb}`{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{bBd}0`3``{AdBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Ad}{{{b{Ad}}{b{dj}}}l}{cc{}}{{{b{Ad}}{b{Af}}}{{b{{h{Bh}}}}}}{{{b{Ad}}{b{Af}}}Aj}{{}c{}}5;:9``````````````````````7630;:9`{{{b{Af}}{b{Af}}}Al}{BjAl}{{{b{Af}}{b{Af}}{b{Af}}}Al}``````{{{b{Bl}}}{{b{Af}}}};;::{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{b{b{dc}}}Al{}}0{{bC`}Al}0{BlAb}{{{b{Af}}}{{Ab{Bh}}}}1{{{b{Bl}}c}{{Cd{{Ab{Cb}}}}}{{Ch{Cf}}}}{{{b{Bl}}{b{Cf}}{b{d{Ab{Cb}}}}}{{Cd{Al}}}}{{{b{Bl}}{b{dj}}}l}{{{b{Bn}}{b{dj}}}l}{cc{}}0??{{{b{Bl}}{b{Af}}}Aj}{{{b{Bl}}{b{Af}}{b{{Cj{Bn}}}}A`}Aj}{{{b{Bl}}{b{Af}}{b{{Cj{Cl}}}}{b{{Cj{Bn}}}}A`A`}Aj}{{{b{Af}}}Bl}{{{b{Af}}}{{Cn{{Ab{Bn}}{Ab{Bh}}}}}}{{{b{{Cj{Cl}}}}A`}{{Cn{BnA`}}}}{BlBh}<{bc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{bBd}0{D`Db}{D`Aj}``````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Dd}}}Dd}{{b{b{dc}}}Al{}}{{bC`}Al}{DdA`}{{{b{Af}}{b{Af}}}{{Ah{{h{Dd}}Df}}}}{{{b{Bb}}{b{Af}}}{{h{Dd}}}}{{{b{Af}}{b{Af}}}{{Ah{{Ab{Dd}}Df}}}}{{{b{Bb}}{b{Af}}}{{Ab{Dd}}}}{{{b{Df}}{b{dj}}}l}0{{{b{Bb}}{b{dj}}}l}{{{b{Dd}}{b{dj}}}l}{DhDf}{cc{}}00{{{b{Bb}}}{{b{Af}}}}{{}c{}}00{{{b{Af}}{b{Af}}}{{Ah{AjDf}}}}{{{b{Bb}}{b{Af}}}Aj}{{{b{Af}}}{{Ah{BbDf}}}}{BbBh}{BbDj}{{{b{Af}}{b{Af}}{b{Af}}}{{Ah{BhDf}}}}{{{b{Bb}}{b{Af}}{b{Af}}}Bh}{{{b{Af}}{b{Af}}c}{{Ah{BhDf}}}{{E`{{b{Dl}}}{{Dn{Bh}}}}}}{{{b{Bb}}{b{Af}}c}Bh{{E`{{b{Dl}}}{{Dn{Bh}}}}}}{{{b{Af}}{b{Af}}}{{Ah{{Ab{Bh}}Df}}}}{{{b{Bb}}{b{Af}}}{{Ab{Bh}}}}{DdA`}{DdBh}{bc{}}{bBh}{c{{Ah{e}}}{}{}}00{{}{{Ah{c}}}{}}00{bBd}00`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}{{Cd{Eb}}}}{{{b{dEb}}}Al}{cc{}}{{}c{}}{{{b{Eb}}}{{b{Cf}}}}{EbCb}:98`76{{{b{Cf}}}{{Ah{Bh{B`{An}}}}}}{EdAb}{{{b{Ed}}{b{dj}}}l}65{{{b{Ed}}{b{Cf}}{b{Cf}}}Aj}{{}Ed}3?>={{{b{Cf}}{b{E`}}}{{Cd{Al}}}}","D":"Kb","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Config",0],[6,"Option",232,null,1],[5,"Formatter",233],[8,"Result",233],[5,"SearchResult",0],[1,"usize"],[5,"Vec",234],[5,"ArgParser",56],[1,"str"],[6,"Result",235,null,1],[1,"bool"],[1,"unit"],[10,"Error",236],[5,"Box",237,null,1],[5,"RegexPattern",150],[5,"TypeId",238],[5,"HashMap",239],[5,"String",240],[8,"TextParts",99],[5,"GlobPattern",103],[6,"Component",103],[1,"u8"],[5,"PathBuf",241],[8,"Result",242],[5,"Path",241],[10,"AsRef",243],[1,"slice"],[1,"char"],[1,"tuple",null,null,1],[15,"CharacterClass",147],[5,"HashSet",244],[5,"Match",150],[6,"PatternError",150],[6,"Error",245],[5,"Regex",246],[5,"Captures",246],[17,"Output"],[10,"Fn",247],[5,"TempDir",205],[5,"GitIgnoreFiles",217],[5,"Color",72]],"r":[[0,56],[1,72],[14,150],[15,150],[23,150],[27,99],[29,99],[31,99],[35,150]],"b":[[169,"impl-Display-for-PatternError"],[170,"impl-Debug-for-PatternError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAI8AHAABAAEABAACAAgACQAVAAAAGAAEAB4AAAAgAAAAIgAVADoABABAAAEARAACAF0AAQBhAAIAbwAKAHsAAAB+AAEAigAAAIwACQCcAAoAqAAAAKoABAC2AAAAuQACAL0AAAC/AAAAwQARANUACgDiAAYA","P":[[7,"T"],[12,""],[17,"T"],[20,""],[21,"U"],[24,""],[47,"U,T"],[49,"U"],[51,""],[58,"T"],[60,""],[62,"T"],[63,""],[65,"U"],[66,""],[67,"U,T"],[68,"U"],[69,""],[92,"T"],[95,"U"],[96,"U,T"],[97,"U"],[98,""],[110,"T"],[114,""],[116,"T"],[118,""],[123,"P"],[124,""],[127,"T"],[129,"U"],[131,""],[139,"T"],[141,"U,T"],[143,"U"],[145,""],[155,"T"],[161,""],[162,"T"],[163,""],[174,"T"],[177,""],[178,"U"],[181,""],[188,"F"],[190,""],[194,"T"],[195,""],[196,"U,T"],[199,"U"],[202,""],[206,"T"],[208,""],[210,"T"],[211,"U"],[212,""],[214,"U,T"],[215,"U"],[216,""],[218,"T"],[220,""],[223,"T"],[224,"U"],[225,""],[228,"U,T"],[229,"U"],[230,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7144]}