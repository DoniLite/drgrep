var searchIndex = new Map(JSON.parse('[["drgrep",{"t":"EEFJEFJCNNNNCOOEENNNCONNEONOEQEQEQHCOEHOHOHHHHOOCNNNNNNCOCFONNNNNNNNNNNNNCCTTTTTTTTTTTTFTTTTTTTNNNNNNNIHHHPGFPPPNNNNNNNNNNNONONNNNNNNNNNNNNNONNNNNNNNNOOCFPGPFNNNNNNNNNOHNHNNNNNNNNNNNNNHNNOOHNHNHNOONNNNNNNNNNNFNNHNNNNONNNFNNHONNNNNOHNNNH","n":["ArgParser","Color","Config","DEFAULT_MESSAGE","RegexPattern","SearchResult","VERSION","args","borrow","","borrow_mut","","color","file_path","files","find","find_all","fmt","from","","glob","idx","into","","is_match","line","new","path_is_dir","print_colored","","print_partial_colored","","print_styled","","read_stdin","regex","","replace_all","run","search_content","search_insensitive_case","search_key","search_sensitive_case","search_with_regex","search_word_insensitive_case","search_word_sensitive_case","sensitive","source","temp_dir","try_from","","try_into","","type_id","","utilities","word","parser","ArgParser","args","borrow","borrow_mut","default","fmt","from","get","has","into","new","set","try_from","try_into","type_id","config","printer","BLACK","BLUE","BOLD","BRIGHT_BLACK","BRIGHT_BLUE","BRIGHT_CYAN","BRIGHT_GREEN","BRIGHT_MAGENTA","BRIGHT_RED","BRIGHT_WHITE","BRIGHT_YELLOW","CYAN","Color","GREEN","MAGENTA","RED","RESET","UNDERLINE","WHITE","YELLOW","borrow","borrow_mut","from","into","try_from","try_into","type_id","TextParts","print_colored","print_partial_colored","print_styled","CharacterClass","Component","GlobPattern","Literal","MultiWildcard","SingleWildcard","as_str","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","components","expand_alternatives","expanded_patterns","find_files","find_files_recursive","fmt","","from","","into","","matches","matches_components","matches_from_position","new","parse","parse_character_class","pattern","split_respecting_braces","to_owned","","try_from","","try_into","","type_id","","chars","negated","pattern","Match","Other","PatternError","RegexError","RegexPattern","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","end","find","","find_all","","fmt","","","","from","","","","get_pattern","into","","","is_match","","new","pattern","regex","replace_all","","replace_all_with","","split","","start","text","to_owned","to_string","try_from","","","try_into","","","type_id","","","TempDir","borrow","borrow_mut","create_temp_dir","drop","from","into","path","","try_from","try_into","type_id","GitIgnoreFiles","borrow","borrow_mut","can_read_to_utf8","entries","fmt","from","into","is_ignored","load","pattern","read_stdin","try_from","try_into","type_id","visit_dirs"],"q":[[0,"drgrep"],[57,"drgrep::args"],[58,"drgrep::args::parser"],[73,"drgrep::color"],[75,"drgrep::color::config"],[102,"drgrep::color::printer"],[106,"drgrep::glob"],[150,"drgrep::glob::Component"],[152,"drgrep::regex"],[153,"drgrep::regex::pattern"],[208,"drgrep::temp_dir"],[220,"drgrep::utilities"],[236,"core::option"],[237,"core::fmt"],[238,"alloc::vec"],[239,"core::result"],[240,"alloc::string"],[241,"std::io::error"],[242,"core::error"],[243,"alloc::boxed"],[244,"core::any"],[245,"std::collections::hash::map"],[246,"std::path"],[247,"core::convert"],[248,"std::collections::hash::set"],[249,"regex::error"],[250,"regex::regex::string"],[251,"core::ops::function"]],"i":"````````nf10`00``010`110`100````````0``0`0````01`101010`1``Ad0000000000000``Ef00000000000`00000000000000````C```000Bn0101010101000000101010000000001010101D`0``Df`0`0BfDd2100000`1`1221022101210`1111`1`1`10002210210210`Eb0`00000000`Ed0`0000000`000`","f":"```{{}b}``0`{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0`{fh}0``{{{b{f}}{b{dj}}}l}{cc{}}0`{nA`}{{}c{}}0`{nAb}{{{b{Ad}}}{{Ah{f{b{Af}}}}}}{fAj}``````{{}{{An{Al}}}}`8`{f{{Ah{B`{Bd{Bb}}}}}}9{{{b{Af}}{b{Af}}}{{Ab{{b{Af}}}}}}:0{{{b{Bf}}{b{Af}}{b{Af}}}{{Ab{n}}}}{{{b{Af}}{b{Af}}{b{Af}}}{{Ab{n}}}}05{nb}`{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{bBh}0`3``{AdBj}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Ad}{{{b{Ad}}{b{dj}}}l}{cc{}}{{{b{Ad}}{b{Af}}}{{b{{h{Al}}}}}}{{{b{Ad}}{b{Af}}}Aj}{{}c{}}5{{{b{dAd}}{b{Af}}Al}B`}<;:``````````````````````8741<;:`{{{b{Af}}{b{Af}}}B`}{BlB`}{{{b{Af}}{b{Af}}{b{Af}}}B`}``````{{{b{Bn}}}{{b{Af}}}}<<;;{{{b{Bn}}}Bn}{{{b{C`}}}C`}{{b{b{dc}}}B`{}}0{{bCb}B`}0{BnAb}{{{b{Af}}}{{Ab{Al}}}}1{{{b{Bn}}c}{{An{{Ab{Cd}}}}}{{Ch{Cf}}}}{{{b{Bn}}{b{Cf}}{b{d{Ab{Cd}}}}}{{An{B`}}}}{{{b{Bn}}{b{dj}}}l}{{{b{C`}}{b{dj}}}l}{cc{}}0{{}c{}}0{{{b{Bn}}{b{Af}}}Aj}{{{b{Bn}}{b{Af}}{b{{Cj{C`}}}}A`}Aj}{{{b{Bn}}{b{Af}}{b{{Cj{Cl}}}}{b{{Cj{C`}}}}A`A`}Aj}{{{b{Af}}}Bn}{{{b{Af}}}{{Cn{{Ab{C`}}{Ab{Al}}}}}}{{{b{{Cj{Cl}}}}A`}{{Cn{C`A`}}}}{BnAl}={bc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{bBh}0{D`Db}{D`Aj}``````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Dd}}}Dd}{{b{b{dc}}}B`{}}{{bCb}B`}{DdA`}{{{b{Af}}{b{Af}}}{{Ah{{h{Dd}}Df}}}}{{{b{Bf}}{b{Af}}}{{h{Dd}}}}{{{b{Af}}{b{Af}}}{{Ah{{Ab{Dd}}Df}}}}{{{b{Bf}}{b{Af}}}{{Ab{Dd}}}}{{{b{Df}}{b{dj}}}l}0{{{b{Bf}}{b{dj}}}l}{{{b{Dd}}{b{dj}}}l}{cc{}}{DhDf}11{{{b{Bf}}}{{b{Af}}}}{{}c{}}00{{{b{Af}}{b{Af}}}{{Ah{AjDf}}}}{{{b{Bf}}{b{Af}}}Aj}{{{b{Af}}}{{Ah{BfDf}}}}{BfAl}{BfDj}{{{b{Af}}{b{Af}}{b{Af}}}{{Ah{AlDf}}}}{{{b{Bf}}{b{Af}}{b{Af}}}Al}{{{b{Af}}{b{Af}}c}{{Ah{AlDf}}}{{E`{{b{Dl}}}{{Dn{Al}}}}}}{{{b{Bf}}{b{Af}}c}Al{{E`{{b{Dl}}}{{Dn{Al}}}}}}{{{b{Af}}{b{Af}}}{{Ah{{Ab{Al}}Df}}}}{{{b{Bf}}{b{Af}}}{{Ab{Al}}}}{DdA`}{DdAl}{bc{}}{bAl}{c{{Ah{e}}}{}{}}00{{}{{Ah{c}}}{}}00{bBh}00`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}{{An{Eb}}}}{{{b{dEb}}}B`}{cc{}}{{}c{}}{{{b{Eb}}}{{b{Cf}}}}{EbCd}:98`76{{{b{Cf}}}{{Ah{Al{Bd{Bb}}}}}}{EdAb}{{{b{Ed}}{b{dj}}}l}65{{{b{Ed}}{b{Cf}}{b{Cf}}}Aj}{{}Ed}3{{}{{An{Al}}}}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bBh}{{{b{Cf}}{b{E`}}}{{An{B`}}}}","D":"Kb","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Config",0],[6,"Option",236,null,1],[5,"Formatter",237],[8,"Result",237],[5,"SearchResult",0],[1,"usize"],[5,"Vec",238],[5,"ArgParser",58],[1,"str"],[6,"Result",239,null,1],[1,"bool"],[5,"String",240],[8,"Result",241],[1,"unit"],[10,"Error",242],[5,"Box",243,null,1],[5,"RegexPattern",153],[5,"TypeId",244],[5,"HashMap",245],[8,"TextParts",102],[5,"GlobPattern",106],[6,"Component",106],[1,"u8"],[5,"PathBuf",246],[5,"Path",246],[10,"AsRef",247],[1,"slice"],[1,"char"],[1,"tuple",null,null,1],[15,"CharacterClass",150],[5,"HashSet",248],[5,"Match",153],[6,"PatternError",153],[6,"Error",249],[5,"Regex",250],[5,"Captures",250],[17,"Output"],[10,"Fn",251],[5,"TempDir",208],[5,"GitIgnoreFiles",220],[5,"Color",75]],"r":[[0,58],[1,75],[4,153],[15,153],[16,153],[24,153],[28,102],[30,102],[32,102],[34,220],[37,153]],"b":[[172,"impl-Debug-for-PatternError"],[173,"impl-Display-for-PatternError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJMAHQABAAEABAADAAkACQAWAAAAGQAEAB8AAAAhAAAAIwAWADwABABCAAEARgADAGAAAQBkAAIAcgAKAH4AAACBAAEAjQAAAI8ACQCfAAoAqwAAAK0AAwCyAAAAuQAAALwAAgDAAAAAwgAAAMQAEQDYAAoA5QAHAA==","P":[[8,"T"],[13,""],[18,"T"],[21,""],[22,"U"],[25,""],[49,"U,T"],[51,"U"],[53,""],[60,"T"],[62,""],[64,"T"],[65,""],[67,"U"],[68,""],[70,"U,T"],[71,"U"],[72,""],[95,"T"],[98,"U"],[99,"U,T"],[100,"U"],[101,""],[113,"T"],[117,""],[119,"T"],[121,""],[126,"P"],[127,""],[130,"T"],[132,"U"],[134,""],[142,"T"],[144,"U,T"],[146,"U"],[148,""],[158,"T"],[164,""],[165,"T"],[166,""],[176,"T"],[177,""],[178,"T"],[180,""],[181,"U"],[184,""],[191,"F"],[193,""],[197,"T"],[198,""],[199,"U,T"],[202,"U"],[205,""],[209,"T"],[211,""],[213,"T"],[214,"U"],[215,""],[217,"U,T"],[218,"U"],[219,""],[221,"T"],[223,""],[226,"T"],[227,"U"],[228,""],[232,"U,T"],[233,"U"],[234,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7341]}