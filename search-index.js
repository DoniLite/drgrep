var searchIndex = new Map(JSON.parse('[["drgrep",{"t":"EFFFCNNNNNNHCOOONNNNNNNOONOEEECOHHOHHHOONNNNNNNNNOCFONNNNNNNNNNNCCTTTTTTTTTTTTFTTTTTTTNNNNNNNHHHCPPPPPFPPGGPGFPPPPPNNNNNNNNNNNNNNNNNNNOONNHHNHNNNNNNNNNNNNNNNNNNNHNNNOHNNOONNNNNNNNNNNNNNNNNNN","n":["Color","Config","LinesInfo","SearchResult","args","borrow","","","borrow_mut","","","can_read_to_utf8","color","end_index","file_path","files","fmt","from","","","into","","","line","lines","new","occurrence","print_colored","print_partial_colored","print_styled","regex","","run","search_insensitive_case","search_key","search_sensitive_case","search_word_insensitive_case","search_word_sensitive_case","sensitive","start_index","try_from","","","try_into","","","type_id","","","word","parser","ArgParser","args","borrow","borrow_mut","fmt","from","get","has","into","new","try_from","try_into","type_id","config","printer","BLACK","BLUE","BOLD","BRIGHT_BLACK","BRIGHT_BLUE","BRIGHT_CYAN","BRIGHT_GREEN","BRIGHT_MAGENTA","BRIGHT_RED","BRIGHT_WHITE","BRIGHT_YELLOW","CYAN","Color","GREEN","MAGENTA","RED","RESET","UNDERLINE","WHITE","YELLOW","borrow","borrow_mut","from","into","try_from","try_into","type_id","print_colored","print_partial_colored","print_styled","pattern","AnyChar","Digit","EndAnchor","InvalidPattern","Literal","Match","OneOrMore","Other","PatternElement","PatternError","Quantifier","QuantifierType","SimplePattern","StartAnchor","Whitespace","Word","ZeroOrMore","ZeroOrOne","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","elements","end","eq","","example","find","","find_all","","find_from","fmt","","","","","","from","","","","","get_pattern","into","","","","","is_match","","matches_element","new","pattern","replace_all","","split","start","text","to_owned","","","to_string","try_from","","","","","try_into","","","","","type_id","","","",""],"q":[[0,"drgrep"],[50,"drgrep::args"],[51,"drgrep::args::parser"],[64,"drgrep::color"],[66,"drgrep::color::config"],[93,"drgrep::color::printer"],[96,"drgrep::regex"],[97,"drgrep::regex::pattern"],[190,"std::path"],[191,"alloc::string"],[192,"core::error"],[193,"alloc::boxed"],[194,"core::result"],[195,"core::option"],[196,"core::fmt"],[197,"alloc::vec"],[198,"core::any"],[199,"std::collections::hash::map"]],"i":"`````AlA`Ad210``10002102101202````0``0```012102102102``B`00000000000``Cn00000000000`00000000000000````C`00Cj1`Cb1``2``22200120ChCd342104204204201042``1`1133421034210134210`1111`11004203342103421034210","f":"`````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{f}}}{{n{h{l{j}}}}}}`{A`Ab}{AdAf}0{{{b{Ad}}{b{dAh}}}Aj}{cc{}}00{{}c{}}00{A`b}{AlAn}{{{b{B`}}}{{n{Ad{b{Bb}}}}}}{AlAb}````7{Ad{{n{Bd{l{j}}}}}}{{{b{Bb}}{b{Bb}}}{{An{{b{Bb}}}}}}{Adb}1{{{b{Bb}}{b{Bb}}}Al}0{AdBf}={c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{bBh}00{Alb}``{B`Bj}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{B`}}{b{dAh}}}Aj}{cc{}}{{{b{B`}}{b{Bb}}}{{b{{Af{h}}}}}}{{{b{B`}}{b{Bb}}}Bf}{{}c{}}{{}B`}<;:``````````````````````7641<;:{{{b{Bb}}{b{Bb}}}Bd}{{{b{{Bn{{Bl{{b{Bb}}{b{Bb}}}}}}}}}Bd}{{{b{Bb}}{b{Bb}}{b{Bb}}}Bd}```````````````````:::::99999{{{b{C`}}}C`}{{{b{Cb}}}Cb}{{{b{Cd}}}Cd}{{b{b{dc}}}Bd{}}00{{bCf}Bd}00{ChAn}{CdAb}{{{b{C`}}{b{C`}}}Bf}{{{b{Cb}}{b{Cb}}}Bf}{{}{{n{Bd{l{j}}}}}}{{{b{Bb}}{b{Bb}}}{{n{{Af{Cd}}Cj}}}}{{{b{Ch}}{b{Bb}}}{{Af{Cd}}}}{{{b{Bb}}{b{Bb}}}{{n{{An{Cd}}Cj}}}}{{{b{Ch}}{b{Bb}}}{{An{Cd}}}}{{{b{Ch}}{b{Bb}}Ab}{{Af{Cd}}}}{{{b{Cj}}{b{dAh}}}Aj}0{{{b{C`}}{b{dAh}}}Aj}{{{b{Cb}}{b{dAh}}}Aj}{{{b{Ch}}{b{dAh}}}Aj}{{{b{Cd}}{b{dAh}}}Aj}{cc{}}0000{{{b{Ch}}}{{b{Bb}}}}{{}c{}}0000{{{b{Bb}}{b{Bb}}}{{n{BfCj}}}}{{{b{Ch}}{b{Bb}}}Bf}{{{b{C`}}Cl}Bf}{{{b{Bb}}}{{n{ChCj}}}}{Chh}{{{b{Bb}}{b{Bb}}{b{Bb}}}{{n{hCj}}}}{{{b{Ch}}{b{Bb}}{b{Bb}}}h}{{{b{Ch}}{b{Bb}}}{{An{h}}}}{CdAb}{Cdh}{bc{}}00{bh}{c{{n{e}}}{}{}}0000{{}{{n{c}}}{}}0000{bBh}0000","D":"Dn","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Path",190],[5,"String",191],[10,"Error",192],[5,"Box",193,null,1],[6,"Result",194,null,1],[5,"LinesInfo",0],[1,"usize"],[5,"Config",0],[6,"Option",195,null,1],[5,"Formatter",196],[8,"Result",196],[5,"SearchResult",0],[5,"Vec",197],[5,"ArgParser",51],[1,"str"],[1,"unit"],[1,"bool"],[5,"TypeId",198],[5,"HashMap",199],[1,"tuple",null,null,1],[1,"slice"],[6,"PatternElement",97],[6,"QuantifierType",97],[5,"Match",97],[1,"u8"],[5,"SimplePattern",97],[6,"PatternError",97],[1,"char"],[5,"Color",66]],"r":[[0,66],[27,93],[28,93],[29,93]],"b":[[144,"impl-Display-for-PatternError"],[145,"impl-Debug-for-PatternError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJcAEgABAAAAAwAOABgAIAA6AAEAPQAbAFsAAwBgAAAAYgACAGYAAABoAAAAbAAAAG8AHQCOAAAAkQAFAJwAAACiAAAApgABAKoAFAA=","P":[[5,"T"],[11,""],[17,"T"],[20,"U"],[23,""],[40,"U,T"],[43,"U"],[46,""],[53,"T"],[55,""],[56,"T"],[57,""],[59,"U"],[60,""],[61,"U,T"],[62,"U"],[63,""],[86,"T"],[89,"U"],[90,"U,T"],[91,"U"],[92,""],[115,"T"],[125,""],[128,"T"],[131,""],[150,"T"],[155,""],[156,"U"],[161,""],[171,"T"],[174,""],[175,"U,T"],[180,"U"],[185,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[4875]}