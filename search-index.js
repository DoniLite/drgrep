var searchIndex = new Map(JSON.parse('[["drgrep",{"t":"EEFJFCNNNNCOOEENNNCONNEONOEQEQEQCOEHOHOHHHHOOCNNNNNNCOCFONNNNNNNNNNNNCCTTTTTTTTTTTTFTTTTTTTNNNNNNNIHHHPGFPPPNNNNNNNNNNNONONNNNNNNNNNNNNNONNNNNNNNNOOCPPPPPFPPGGPGFPPPPPNNNNNNNNNNNNNNNNNNNOONNHNHNNNNNNNNNNNNNNNNNNNHNNNOHNNOONNNNNNNNNNNNNNNNNNNFNNHNNNNONNNFNNHONNNNNONNNH","n":["ArgParser","Color","Config","DEFAULT_MESSAGE","SearchResult","args","borrow","","borrow_mut","","color","file_path","files","find","find_all","fmt","from","","glob","idx","into","","is_match","line","new","path_is_dir","print_colored","","print_partial_colored","","print_styled","","regex","","replace_all","run","search_content","search_insensitive_case","search_key","search_sensitive_case","search_with_regex","search_word_insensitive_case","search_word_sensitive_case","sensitive","source","temp_dir","try_from","","try_into","","type_id","","utilities","word","parser","ArgParser","args","borrow","borrow_mut","default","fmt","from","get","has","into","new","try_from","try_into","type_id","config","printer","BLACK","BLUE","BOLD","BRIGHT_BLACK","BRIGHT_BLUE","BRIGHT_CYAN","BRIGHT_GREEN","BRIGHT_MAGENTA","BRIGHT_RED","BRIGHT_WHITE","BRIGHT_YELLOW","CYAN","Color","GREEN","MAGENTA","RED","RESET","UNDERLINE","WHITE","YELLOW","borrow","borrow_mut","from","into","try_from","try_into","type_id","TextParts","print_colored","print_partial_colored","print_styled","CharacterClass","Component","GlobPattern","Literal","MultiWildcard","SingleWildcard","as_str","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","components","expand_alternatives","expanded_patterns","find_files","find_files_recursive","fmt","","from","","into","","matches","matches_components","matches_from_position","new","parse","parse_character_class","pattern","split_respecting_braces","to_owned","","try_from","","try_into","","type_id","","chars","negated","pattern","AnyChar","Digit","EndAnchor","InvalidPattern","Literal","Match","OneOrMore","Other","PatternElement","PatternError","Quantifier","QuantifierType","SimplePattern","StartAnchor","Whitespace","Word","ZeroOrMore","ZeroOrOne","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","elements","end","eq","","find","","find_all","","find_from","fmt","","","","","","from","","","","","get_pattern","into","","","","","is_match","","matches_element","new","pattern","replace_all","","split","start","text","to_owned","","","to_string","try_from","","","","","try_into","","","","","type_id","","","","","TempDir","borrow","borrow_mut","create_temp_dir","drop","from","into","path","","try_from","try_into","type_id","GitIgnoreFiles","borrow","borrow_mut","can_read_to_utf8","entries","fmt","from","into","is_ignored","load","pattern","try_from","try_into","type_id","visit_dirs"],"q":[[0,"drgrep"],[54,"drgrep::args"],[55,"drgrep::args::parser"],[69,"drgrep::color"],[71,"drgrep::color::config"],[98,"drgrep::color::printer"],[102,"drgrep::glob"],[146,"drgrep::glob::Component"],[148,"drgrep::regex"],[149,"drgrep::regex::pattern"],[241,"drgrep::temp_dir"],[253,"drgrep::utilities"],[268,"core::option"],[269,"core::fmt"],[270,"alloc::vec"],[271,"core::result"],[272,"core::error"],[273,"alloc::boxed"],[274,"core::any"],[275,"std::collections::hash::map"],[276,"alloc::string"],[277,"std::path"],[278,"std::io::error"],[279,"core::convert"],[280,"std::collections::hash::set"],[281,"core::ops::function"]],"i":"``````nf10`00``010`110`100```````0``0`0````01`101010`1``Ad000000000000``Eb00000000000`00000000000000````Bn``000Bl0101010101000000101010000000001010101D`0`Dd00Dj1`Df1``2``22200120BbDh342104204204201042`1`1133421034210134210`1111`11004203342103421034210`Dl0`00000000`Dn0`0000000000`","f":"```{{}b}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0`{fh}0``{{{b{f}}{b{dj}}}l}{cc{}}0`{nA`}{{}c{}}0`{nAb}{{{b{Ad}}}{{Ah{f{b{Af}}}}}}{fAj}```````7`{f{{Ah{Al{B`{An}}}}}}8{{{b{Af}}{b{Af}}}{{Ab{{b{Af}}}}}}90{{{b{Bb}}{b{Af}}{b{Af}}}{{Ab{n}}}}{{{b{Af}}{b{Af}}{b{Af}}}{{Ab{n}}}}04{nb}`{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{bBd}0`3``{AdBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}Ad}{{{b{Ad}}{b{dj}}}l}{cc{}}{{{b{Ad}}{b{Af}}}{{b{{h{Bh}}}}}}{{{b{Ad}}{b{Af}}}Aj}{{}c{}}5;:9``````````````````````7630;:9`{{{b{Af}}{b{Af}}}Al}{BjAl}{{{b{Af}}{b{Af}}{b{Af}}}Al}``````{{{b{Bl}}}{{b{Af}}}};;::{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{b{b{dc}}}Al{}}0{{bC`}Al}0{BlAb}{{{b{Af}}}{{Ab{Bh}}}}1{{{b{Bl}}c}{{Cd{{Ab{Cb}}}}}{{Ch{Cf}}}}{{{b{Bl}}{b{Cf}}{b{d{Ab{Cb}}}}}{{Cd{Al}}}}{{{b{Bl}}{b{dj}}}l}{{{b{Bn}}{b{dj}}}l}{cc{}}0??{{{b{Bl}}{b{Af}}}Aj}{{{b{Bl}}{b{Af}}{b{{Cj{Bn}}}}A`}Aj}{{{b{Bl}}{b{Af}}{b{{Cj{Cl}}}}{b{{Cj{Bn}}}}A`A`}Aj}{{{b{Af}}}Bl}{{{b{Af}}}{{Cn{{Ab{Bn}}{Ab{Bh}}}}}}{{{b{{Cj{Cl}}}}A`}{{Cn{BnA`}}}}{BlBh}<{bc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{bBd}0{D`Db}{D`Aj}```````````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{Dd}}}Dd}{{{b{Df}}}Df}{{{b{Dh}}}Dh}{{b{b{dc}}}Al{}}00{{bC`}Al}00{BbAb}{DhA`}{{{b{Dd}}{b{Dd}}}Aj}{{{b{Df}}{b{Df}}}Aj}{{{b{Af}}{b{Af}}}{{Ah{{h{Dh}}Dj}}}}{{{b{Bb}}{b{Af}}}{{h{Dh}}}}{{{b{Af}}{b{Af}}}{{Ah{{Ab{Dh}}Dj}}}}{{{b{Bb}}{b{Af}}}{{Ab{Dh}}}}{{{b{Bb}}{b{Af}}A`}{{h{Dh}}}}{{{b{Dj}}{b{dj}}}l}0{{{b{Dd}}{b{dj}}}l}{{{b{Df}}{b{dj}}}l}{{{b{Bb}}{b{dj}}}l}{{{b{Dh}}{b{dj}}}l}{cc{}}0000{{{b{Bb}}}{{b{Af}}}}{{}c{}}0000{{{b{Af}}{b{Af}}}{{Ah{AjDj}}}}{{{b{Bb}}{b{Af}}}Aj}{{{b{Dd}}Cl}Aj}{{{b{Af}}}{{Ah{BbDj}}}}{BbBh}{{{b{Af}}{b{Af}}{b{Af}}}{{Ah{BhDj}}}}{{{b{Bb}}{b{Af}}{b{Af}}}Bh}{{{b{Bb}}{b{Af}}}{{Ab{Bh}}}}{DhA`}{DhBh}{bc{}}00{bBh}{c{{Ah{e}}}{}{}}0000{{}{{Ah{c}}}{}}0000{bBd}0000`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}{{Cd{Dl}}}}{{{b{dDl}}}Al}{cc{}}{{}c{}}{{{b{Dl}}}{{b{Cf}}}}{DlCb}:98`76{{{b{Cf}}}{{Ah{Bh{B`{An}}}}}}{DnAb}{{{b{Dn}}{b{dj}}}l}65{{{b{Dn}}{b{Cf}}{b{Cf}}}Aj}{{}Dn}3?>={{{b{Cf}}{b{E`}}}{{Cd{Al}}}}","D":"L`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Config",0],[6,"Option",268,null,1],[5,"Formatter",269],[8,"Result",269],[5,"SearchResult",0],[1,"usize"],[5,"Vec",270],[5,"ArgParser",55],[1,"str"],[6,"Result",271,null,1],[1,"bool"],[1,"unit"],[10,"Error",272],[5,"Box",273,null,1],[5,"SimplePattern",149],[5,"TypeId",274],[5,"HashMap",275],[5,"String",276],[8,"TextParts",98],[5,"GlobPattern",102],[6,"Component",102],[1,"u8"],[5,"PathBuf",277],[8,"Result",278],[5,"Path",277],[10,"AsRef",279],[1,"slice"],[1,"char"],[1,"tuple",null,null,1],[15,"CharacterClass",146],[5,"HashSet",280],[6,"PatternElement",149],[6,"QuantifierType",149],[5,"Match",149],[6,"PatternError",149],[5,"TempDir",241],[5,"GitIgnoreFiles",253],[10,"Fn",281],[5,"Color",71]],"r":[[0,55],[1,71],[13,149],[14,149],[22,149],[26,98],[28,98],[30,98],[34,149]],"b":[[195,"impl-Debug-for-PatternError"],[196,"impl-Display-for-PatternError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKwAHgABAAEABAABAAcACQAUAAAAFwAEAB0AAAAfAAAAIQAVADkABAA/AAEAQwACAFwAAQBgAAIAbgAKAHoAAAB9AAEAiQAAAIsACQCWAAIAmgAAAJwAAACgAAAAowAcAMEAAADEAAUA1QAAANkAAQDdABkA+QAKAAYBBgA=","P":[[6,"T"],[11,""],[16,"T"],[19,""],[20,"U"],[23,""],[46,"U,T"],[48,"U"],[50,""],[57,"T"],[59,""],[61,"T"],[62,""],[64,"U"],[65,""],[66,"U,T"],[67,"U"],[68,""],[91,"T"],[94,"U"],[95,"U,T"],[96,"U"],[97,""],[109,"T"],[113,""],[115,"T"],[117,""],[122,"P"],[123,""],[126,"T"],[128,"U"],[130,""],[138,"T"],[140,"U,T"],[142,"U"],[144,""],[167,"T"],[177,""],[180,"T"],[183,""],[201,"T"],[206,""],[207,"U"],[212,""],[222,"T"],[225,""],[226,"U,T"],[231,"U"],[236,""],[242,"T"],[244,""],[246,"T"],[247,"U"],[248,""],[250,"U,T"],[251,"U"],[252,""],[254,"T"],[256,""],[259,"T"],[260,"U"],[261,""],[264,"U,T"],[265,"U"],[266,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7421]}