name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  check_tag:
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.check.outputs.is_release }}
    steps:
      - id: check
        name: Check if this is a tagged release
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v ]]; then
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check_tag
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: drgrep-linux
            executable_extension: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: drgrep-windows
            executable_extension: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: drgrep-macos
            executable_extension: ""
    
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build for ${{ matrix.os }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "target/${{ matrix.target }}/release/drgrep${{ matrix.executable_extension }}" "artifacts/${{ matrix.binary_name }}${{ matrix.executable_extension }}"
          else
            cp "target/${{ matrix.target }}/release/drgrep" "artifacts/${{ matrix.binary_name }}${{ matrix.executable_extension }}"
          fi
          
      - name: Upload executable
        if: needs.check_tag.outputs.is_release == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: artifacts/${{ matrix.binary_name }}${{ matrix.executable_extension }}

  release:
    permissions:
      contents: write
    needs: [check_tag, build]
    if: needs.check_tag.outputs.is_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: drgrep-linux
          path: artifacts

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: drgrep-windows
          path: artifacts

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: drgrep-macos
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/drgrep-linux
            artifacts/drgrep-windows.exe
            artifacts/drgrep-macos
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}